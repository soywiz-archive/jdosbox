package jdos.win.builtin.user32;

import jdos.win.builtin.gdi32.WinDC;
import jdos.win.loader.BuiltinModule;
import jdos.win.loader.Loader;

public class User32 extends BuiltinModule {
    public User32(Loader loader, int handle) {
        super(loader, "user32.dll", handle);
        add(NonClient.class, "AdjustWindowRectEx", new String[] {"(RECT)lpRect", "(HEX)dwStyle", "(BOOL)bMenu", "(HEX)dwExStyle"});
        add(WinMenu.class, "AppendMenuA", new String[]{"hMenu", "(HEX)uFlags", "uIDNewItem", "(STRING)lpNewItem", "(BOOL)result"});
        add(Painting.class, "BeginPaint", new String[] {"hWnd", "(HEX)lps"});
        add(Winproc.class, "CallWindowProcA", (MSGLOG?new String[] {"lpPrevWndFunc", "hWnd", "(HEX)Msg", "wParam", "lParam"}:null));
        add(Str.class, "CharUpperA", new String[] {"(STRING)lpsz", "(STRING)result"});
        add(WinPos.class, "ClientToScreen", new String[] {"hWnd", "(POINT)lpPoint", "(BOOL)result"});
        add(WinMenu.class, "CreatePopupMenu", new String[0]);
        add(WinWindow.class, "CreateWindowExA", new String[] {"(HEX)dwExStyle", "(STRING)lpClassName", "(STRING)lpWindowName", "(HEX)dwStyle", "x", "y", "nWidth", "nHeight", "hWndParent", "hMenu", "hInstance", "lpParam"});
        add(DefDlg.class, "DefDlgProcA", (MSGLOG?new String[] {"hWnd", "(HEX)Msg", "wParam", "lParam"}:null));
        add(DefWnd.class, "DefWindowProcA", (MSGLOG?new String[] {"hWnd", "(HEX)Msg", "wParam", "lParam"}:null));
        add(Message.class, "DispatchMessageA", (MSGLOG?new String[] {"(HEX)lpmsg"}:null));
        add(WinDC.class, "DrawTextA", new String[] {"hDC", "(STRINGN2)lpchText", "nCount", "(RECT)lpRect", "(HEX)uFormat"});
        add(WinWindow.class, "EnableWindow", new String[] {"hWnd", "(BOOL)bEnable"});
        add(Painting.class, "EndPaint", new String[] {"hWnd", "lpPaint"});
        add(WinDC.class, "FillRect", new String[] {"hDC", "(RECT)lprc", "(BRUSH)hbr"});
        add(WinWindow.class, "FindWindowA", new String[] {"(STRING)lpClassName", "(STRING)lpWindowName"});
        add(WinWindow.class, "FindWindowExA", new String[] {"hwndParent", "hwndChildAfter", "(STRING)lpszClass", "(STRING)lpszWindow"});
        add(Input.class, "GetAsyncKeyState", new String[] {"nVirtKey"});
        add(Input.class, "GetCapture", new String[0]);
        add(WinClass.class, "GetClassInfoA", new String[] {"hInstance", "(STRING)lpClassName", "(HEX)lpWndClass"});
        add(WinClass.class, "GetClassLongA", new String[] {"hWnd", "nIndex"});
        add(WinClass.class, "GetClassNameA", new String[] {"hWnd", "(HEX)lpClassName", "nMaxCount", "result", "01(STRING)lpClassName"});
        add(WinPos.class, "GetClientRect", new String[] {"hWnd", "(HEX)lpRect", "(BOOL)result", "01(RECT)lpRect"});
        add(Input.class, "GetCursorPos", new String[] {"(HEX)lpPoint", "(BOOL)result", "00(POINT)lpPoint"});
        add(Painting.class, "GetDC", new String[] {"hwnd"});
        add(WinWindow.class, "GetDesktopWindow", new String[0]);
        add(Focus.class, "GetForegroundWindow", new String[0]);
        add(Input.class, "GetKeyboardState", new String[] {"(HEX)lpKeyState"});
        add(Input.class, "GetKeyState", new String[]{"nVirtKey"});
        add(WinMenu.class, "GetMenu", new String[] {"hWnd"});
        add(WinMenu.class, "GetMenuItemCount", new String[] {"hMenu"});
        add_wait(Message.class, "GetMessageA", (MSGLOG ? new String[]{"(HEX)lpMsg", "hWnd", "wMsgFilterMin", "wMsgFilterMax", "(BOOL)result", "00(MSG)lpMsg"} : null));
        add(WinWindow.class, "GetParent", new String[] {"hWnd"});
        add(WinWindow.class, "GetPropA", new String[] {"hWnd", "(STRING)lpString"});
        add(SysParams.class, "GetSysColor", new String[]{"nIndex"});
        add(SysParams.class, "GetSystemMetrics", new String[] {"index"});
        add(WinWindow.class, "GetTopWindow", new String[] {"hWnd"});
        add(WinWindow.class, "GetWindow", new String[] {"hwnd", "rel"});
        add(WinWindow.class, "GetWindowLongA", new String[] {"hwnd", "offset"});
        add(WinPos.class, "GetWindowPlacement", new String[] {"hWnd", "lpwndpl"});
        add(WinPos.class, "GetWindowRect", new String[] {"hwnd", "(HEX)pRect", "(BOOL)result", "01(RECT)pRect"});
        add(WinWindow.class, "GetWindowTextA", new String[] {"hWnd", "(HEX)lpString", "nMaxCount", "result", "01(STRING)lpString"});
        add(Painting.class, "InvalidateRect", new String[] {"hWnd", "(RECT)lpRect", "(BOOL)bErase"});
        add(WinPos.class, "IsIconic", new String[] {"hWnd", "(BOOL)result"});
        add(WinWindow.class, "IsWindowEnabled", new String[] {"hWnd"});
        add(WinWindow.class, "IsWindowVisible", new String[] {"hWnd", "(BOOL)result"});
        add(Resource.class, "LoadAcceleratorsA", new String[] {"hInstance", "(STRING)lpTableName"});
        add(WinCursor.class, "LoadCursorA", new String[] {"hInstance", "(STRING)lpCursorName"});
        add(WinIcon.class, "LoadIconA", new String[] {"hInstance", "(STRING)lpIconName"});
        add(Resource.class, "LoadImageA", new String[] {"hinst", "(STRING)lpszName", "uType", "cxDesired", "cyDesired", "fuLoad"});
        add(Resource.class, "LoadStringA", new String[] {"hInstance", "uID", "(HEX)lpBuffer", "nBufferMax", "result", "02(STRING)lpBuffer"});
        add(WinMenu.class, "LoadMenuA", new String[] {"hInstance", "(STRING)lpMenuName"});
        add(Message.class, "MessageBeep", new String[] {"uType"});
        add(MsgBox.class, "MessageBoxA", new String[] {"hWnd", "(STRING)lpText", "(STRING)lpCaption", "uType"});
        add(UiTools.class, "OffsetRect", new String[] {"(RECT)lprc", "dx", "dy", "(BOOL)result", "00(RECT)lprc"});
        add(Message.class, "PeekMessageA", (MSGLOG?new String[] {"(HEX)lpMsg", "hWnd", "wMsgFilterMin", "wMsgFilterMax", "wRemoveMsg", "(BOOL)result", "00(MSG)lpMsg"}:null));
        add(Message.class, "PostMessageA", (MSGLOG?new String[] {"hWnd", "(MSG)Msg", "wParam", "lParam"}:null));
        add(WinClass.class, "RegisterClassA", new String[] {"(CLASS)lpWndClass"});
        add(WinClass.class, "RegisterClassExA", new String[] {"(CLASS)lpwcx"});
        add(Input.class, "ReleaseCapture", new String[] {"(BOOL)result"});
        add(Painting.class, "ReleaseDC", new String[] {"hWnd", "hDC"});
        add(Message.class, "SendMessageA", new String[] {"hWnd", "(HEX)msg", "wParam", "lParam"});
        add(Input.class, "SetCapture", new String[] {"hWnd"});
        add(WinClass.class, "SetClassLongA", new String[] {"hWnd", "nIndex", "dwNewLong"});
        add(WinCursor.class, "SetCursor", new String[] {"hCursor"});
        add(Input.class, "SetCursorPos", new String[] {"X", "Y", "(BOOL)result"});
        add(Focus.class, "SetFocus", new String[] {"hwnd"});
        add(Focus.class, "SetForegroundWindow", new String[] {"hWnd", "(BOOL)result"});
        add(WinMenu.class, "SetMenu", new String[] {"hWnd", "hMenu", "(BOOL)result"});
        add(WinMenu.class, "SetMenuItemInfoA", new String[] {"hMenu", "uItem", "(BOOL)fByPosition", "lpmii", "(BOOL)result"});
        add(WinWindow.class, "SetParent", new String[] {"hWndChild", "hWndNewParent"});
        add(WinWindow.class, "SetPropA", new String[] {"hWnd", "(STRING)lpString", "hData"});
        add(UiTools.class, "SetRect", new String[] {"(HEX)lprc", "xLeft", "yTop", "xRight", "yBottom", "(BOOL)result", "00(RECT)lprc"});
        add(Message.class, "SetTimer", new String[] {"hWnd", "nIDEvent", "uElapse", "(HEX)lpTimerFunc"});
        add(WinWindow.class, "SetWindowLongA", new String[] {"hWnd", "nIndex", "dwNewLong"});
        add(WinPos.class, "SetWindowPos", new String[] {"hWnd", "hWndInsertAfter", "X", "Y", "cx", "cy", "(HEX)uFlags"});
        add(WinCursor.class, "ShowCursor", new String[] {"(BOOL)bShow"});
        add(WinPos.class, "ShowWindow", new String[] {"hWnd", "nCmdShow", "(BOOL)result"});
        add(SysParams.class, "SystemParametersInfoA", new String[] {"uiAction", "uiParam", "pvParam", "fWinIni"});
        add(WinMenu.class, "TranslateAcceleratorA");
        add(Message.class, "TranslateMessage");
        add(Painting.class, "UpdateWindow", new String[]{"hWnd", "(BOOL)result"});
        add(Painting.class, "ValidateRect", new String[]{"hWnd", "(RECT)lpRect", "(BOOL)result"});
        add_wait(Message.class, "WaitForInputIdle", new String[]{"hProcess", "dwMilliseconds"});
        add_wait(Message.class, "WaitMessage", new String[]{"(BOOL)result"});
        add(WinPos.class, "WindowFromPoint", new String[]{"(POINT)Point"});
        add_cdecl(Wsprintf.class, "wsprintfA", new String[]{"(HEX)lpOut", "(STRING)lpFmt", "result", "00(STRING)lpOut"});
    }
}
